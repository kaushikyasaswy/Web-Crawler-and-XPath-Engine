package edu.upenn.cis455.crawler;

import java.util.ArrayList;

import com.sleepycat.je.Environment;
import com.sleepycat.je.Transaction;
import com.sleepycat.persist.EntityCursor;

import edu.upenn.cis455.storage.DBWrapper;
import edu.upenn.cis455.storage.Indices;
import edu.upenn.cis455.storage.URLS;

public class XPathCrawler implements Runnable {  
	
	private String seed_url;
	private String directory;
	private int max_size;
	private int max_number_of_files;
	private MyQueue urlsqueue;
	private ArrayList<Thread> threadpool = new ArrayList<Thread>();
	
	public XPathCrawler(String url, String dir, int size) {
		if (!url.startsWith("http"))
			url = "http://" + url;
		seed_url = url;
		directory = dir;
		max_size = size * 1024 * 1024;
		max_number_of_files = 0;
		urlsqueue = new MyQueue(directory);
		urlsqueue.enqueue(url); // Add the seed URL to the queue
		try {
			Thread t = new Thread(this);
			t.start();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		CrawlerThread crawler = new CrawlerThread(urlsqueue, max_size, max_number_of_files, directory);
		for(int i=0; i<20; i++) {
			Thread t = new Thread(crawler);
			threadpool.add(t);
		}
		for (Thread t : threadpool) { //Start all the worker threads
			t.start();
		}
	}
	
	public void run() {
		while (true) {
			if (urlsqueue.isempty()) {
				for (Thread t : threadpool) {
					while (t.isAlive()) {
						if (t.getState().toString().equals("WAITING")) {
							t.stop();
						}
					}
				}
				break;
			}
		}
	}
	
	public String getDBDirectory() {
		return directory;
	}
	
	public String getSeedURL() {
		return seed_url;
	}
	
	public int getMaxSize() {
		return max_size;
	}
	
	public int getMaxFiles() {
		return max_number_of_files;
	}
	
	public void setMaxFiles(int num) {
		max_number_of_files = num;
	}
	
	public static void main(String args[]) {
		if (args.length < 3) {
			System.err.println("Missing command line arguments");
			System.exit(0);
		}
		XPathCrawler crawler = new XPathCrawler(args[0], args[1], Integer.parseInt(args[2]));
		if (args.length == 4) {
			crawler.setMaxFiles(Integer.parseInt(args[3]));
		}
	}
	
}
